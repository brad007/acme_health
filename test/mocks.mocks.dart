// Mocks generated by Mockito 5.4.4 from annotations
// in acme_health/test/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:acme_health/domain/questionaire/models/questionnaire.dart'
    as _i3;
import 'package:acme_health/infrastructure/fake_http_service.dart' as _i4;
import 'package:acme_health/infrastructure/objectbox_store.dart' as _i6;
import 'package:acme_health/infrastructure/questionnaire/dtos/questionnaire_dto.dart'
    as _i2;
import 'package:acme_health/infrastructure/questionnaire/mappers/questionnaire_mapper.dart'
    as _i7;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeQuestionnaireDTO_0 extends _i1.SmartFake
    implements _i2.QuestionnaireDTO {
  _FakeQuestionnaireDTO_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeQuestionnaire_1 extends _i1.SmartFake implements _i3.Questionnaire {
  _FakeQuestionnaire_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [FakeHttpService].
///
/// See the documentation for Mockito's code generation for more information.
class MockFakeHttpService extends _i1.Mock implements _i4.FakeHttpService {
  @override
  _i5.Future<Map<String, dynamic>> post(
    String? url, {
    required Map<String, dynamic>? body,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [url],
          {#body: body},
        ),
        returnValue:
            _i5.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
        returnValueForMissingStub:
            _i5.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i5.Future<Map<String, dynamic>>);
}

/// A class which mocks [ObjectBoxStore].
///
/// See the documentation for Mockito's code generation for more information.
class MockObjectBoxStore extends _i1.Mock implements _i6.ObjectBoxStore {
  @override
  _i5.Future<void> addQuestionnaire(_i2.QuestionnaireDTO? questionnaire) =>
      (super.noSuchMethod(
        Invocation.method(
          #addQuestionnaire,
          [questionnaire],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> removeQuestionnaire(int? id) => (super.noSuchMethod(
        Invocation.method(
          #removeQuestionnaire,
          [id],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<_i2.QuestionnaireDTO?> getQuestionnaire(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getQuestionnaire,
          [id],
        ),
        returnValue: _i5.Future<_i2.QuestionnaireDTO?>.value(),
        returnValueForMissingStub: _i5.Future<_i2.QuestionnaireDTO?>.value(),
      ) as _i5.Future<_i2.QuestionnaireDTO?>);

  @override
  _i5.Stream<List<_i2.QuestionnaireDTO>> getQuestionnaires() =>
      (super.noSuchMethod(
        Invocation.method(
          #getQuestionnaires,
          [],
        ),
        returnValue: _i5.Stream<List<_i2.QuestionnaireDTO>>.empty(),
        returnValueForMissingStub:
            _i5.Stream<List<_i2.QuestionnaireDTO>>.empty(),
      ) as _i5.Stream<List<_i2.QuestionnaireDTO>>);
}

/// A class which mocks [QuestionnaireMapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockQuestionnaireMapper extends _i1.Mock
    implements _i7.QuestionnaireMapper {
  @override
  _i2.QuestionnaireDTO mapToDTO(_i3.Questionnaire? value) =>
      (super.noSuchMethod(
        Invocation.method(
          #mapToDTO,
          [value],
        ),
        returnValue: _FakeQuestionnaireDTO_0(
          this,
          Invocation.method(
            #mapToDTO,
            [value],
          ),
        ),
        returnValueForMissingStub: _FakeQuestionnaireDTO_0(
          this,
          Invocation.method(
            #mapToDTO,
            [value],
          ),
        ),
      ) as _i2.QuestionnaireDTO);

  @override
  _i3.Questionnaire mapToDomain(_i2.QuestionnaireDTO? value) =>
      (super.noSuchMethod(
        Invocation.method(
          #mapToDomain,
          [value],
        ),
        returnValue: _FakeQuestionnaire_1(
          this,
          Invocation.method(
            #mapToDomain,
            [value],
          ),
        ),
        returnValueForMissingStub: _FakeQuestionnaire_1(
          this,
          Invocation.method(
            #mapToDomain,
            [value],
          ),
        ),
      ) as _i3.Questionnaire);
}
